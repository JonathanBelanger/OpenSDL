/+
// Copyright (C) Jonathan D. Belanger 2018.
// All Rights Reserved.
//
// This software is furnished under a license and may be used and copied only
// in accordance with the terms of such license and with the inclusion of the
// above copyright notice.  This software or any other copies thereof may not
// be provided or otherwise made available to any other person.  No title to
// and ownership of the software is hereby transferred.
//
// The information in this software is subject to change without notice and
// should not be construed as a commitment by the author or co-authors.
//
// The author and any co-authors assume no responsibility for the use or
// reliability of this software.
//
// Description:
//
//  This test file contains the CONSTANT statements.
//
// Revision History:
//
//  V01.000	01-SEP-2018	Jonathan D. Belanger
//  Initially written.
//
//  V01.001	06-SEP-2018	Jonathan D. Belanger
//  Updated the copyright to be GNUGPL V3 compliant.
/-

/+
// Test 6: This is going to test CONSTANT.
/-
MODULE test_6;

/+
// Test 6a: Basic Constants, one for number one for string.
/-
CONSTANT block_node_size1 EQUALS 24;
CONSTANT Strcon1 EQUALS STRING "This is a string constant";
CONSTANT Strcon2 EQUALS STRING "This is a second string constant" PREFIX Jg$;

/+
// Test 6b: Constant defined using a local-variable
/-
#block_size = 24;
CONSTANT block_node_size2 EQUALS #block_size;

/+
// Test 6c: Constants as a comma delimited list.
/-
CONSTANT
	xyz EQUALS 10,
	alpha EQUALS 0,
	noname EQUALS 63;

/+
// Test 6d: Constants in a related list with the same or incremented values.
/-
CONSTANT (
	bits,
	bytes,
	words,
	longs,
	quads,
	octas
	) EQUALS 0 INCREMENT 1 PREFIX ctx$;

CONSTANT
	(bad_block,bad_data,,,,
	overlay,rewrite) EQUALS 0 INCREMENT 4;

CONSTANT (pli,c,bliss,macro)
	EQUALS 4 INCREMENT 4 PREFIX lang$ TAG k
	COUNTER #lang;

CONSTANT (basic,pascal,fortran)
	EQUALS #lang + 4 INCREMENT 4 PREFIX lang$;

/+
// Test 6e: Constants declared in a list with comments
/-
CONSTANT( 
	pli,    /* PL/I
	c,      /* C
	macro   /* MACRO-32
	) EQUALS 4 INCREMENT 4 PREFIX lang$;
CONSTANT (
    nop, 
    unload, 
    loadmcode, 
    seek, 
    spacefile, 
    startmproc, 
    recal, 
    stop, 
    drvclr, 
    initialize) EQUALS 0 INCREMENT 1 PREFIX "io$";
END_MODULE test_6;
